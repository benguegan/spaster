version: '3.8'

services:
  app:
    image: spaster
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    command: start:dev
    ports:
      - '3000:3000'
    networks:
      - back-tier
    # volumes:
    #   # frontend
    #   - ./frontend:/opt/app/frontend/app:delegated
    #   - ./frontend/package.json:/opt/app/frontend/package.json
    #   - ./frontend/package-lock.json:/opt/app/frontend/package-lock.json
    #   - notused:/opt/app/frontend/app/node_modules
    #   # backend
    #   - ./backend/:/opt/app/backend/app:delegated
    #   - ./backend/package.json:/opt/app/backend/package.json
    #   - ./backend/package-lock.json:/opt/app/backend/package-lock.json
    #   - notused:/opt/app/backend/app/node_modules
    restart: always
    depends_on:
      - mongodb
        # condition: service_healthy

  mongodb:
    image: mongo:latest
    container_name: mongodb
    # command: [--auth]
    volumes:
      - ./backend/src/app/infra/data/db:/data/db
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    networks:
      - back-tier
    restart: always
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s

  redis:
    image: redis
    ports:
      - '6379:6379'

  # mongo-express:
  #   image: mongo-express:latest
  #   restart: always
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=mongo
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=mongo
  #     - ME_CONFIG_MONGODB_SERVER=mongodb
  #     - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
  #   networks:
  #     - back-tier
  #   depends_on:
  #     - mongodb

networks:
  back-tier:

volumes:
  notused:
